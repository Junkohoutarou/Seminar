{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InputBase } from '../InputBase/InputBase.mjs';\nconst defaultProps = {};\nconst Textarea = factory((props, ref) => {\n  const {\n    autosize,\n    maxRows,\n    minRows,\n    __staticSelector,\n    ...others\n  } = useProps(\"Textarea\", defaultProps, props);\n  const autosizeProps = autosize ? {\n    maxRows,\n    minRows\n  } : {};\n  return /* @__PURE__ */React.createElement(InputBase, {\n    component: autosize ? TextareaAutosize : \"textarea\",\n    ref,\n    ...others,\n    __staticSelector: __staticSelector || \"Textarea\",\n    multiline: true,\n    \"data-no-overflow\": autosize && maxRows === void 0 || void 0,\n    ...autosizeProps\n  });\n});\nTextarea.classes = InputBase.classes;\nTextarea.displayName = \"@mantine/core/Textarea\";\nexport { Textarea };","map":{"version":3,"names":["defaultProps","Textarea","factory","props","ref","autosize","maxRows","minRows","__staticSelector","others","useProps","autosizeProps","React","createElement","InputBase","component","TextareaAutosize","multiline","classes","displayName"],"sources":["/Users/nguyenphuhao/Downloads/Nhom24/Mantine_Nhom8_Demo/node_modules/@mantine/core/src/components/Textarea/Textarea.tsx"],"sourcesContent":["import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { factory, ElementProps, useProps, Factory, BoxProps, StylesApiProps } from '../../core';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\n\nexport interface TextareaProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<TextareaFactory>,\n    ElementProps<'textarea', 'size'> {\n  __staticSelector?: string;\n\n  /** Determines whether the textarea height should grow with its content, `false` by default */\n  autosize?: boolean;\n\n  /** Maximum rows for autosize textarea to grow, ignored if `autosize` prop is not set */\n  maxRows?: number;\n\n  /** Minimum rows of autosize textarea, ignored if `autosize` prop is not set */\n  minRows?: number;\n}\n\nexport type TextareaFactory = Factory<{\n  props: TextareaProps;\n  ref: HTMLTextAreaElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps: Partial<TextareaProps> = {};\n\nexport const Textarea = factory<TextareaFactory>((props, ref) => {\n  const { autosize, maxRows, minRows, __staticSelector, ...others } = useProps(\n    'Textarea',\n    defaultProps,\n    props\n  );\n\n  const autosizeProps = autosize ? { maxRows, minRows } : {};\n\n  return (\n    <InputBase<any>\n      component={autosize ? TextareaAutosize : 'textarea'}\n      ref={ref}\n      {...others}\n      __staticSelector={__staticSelector || 'Textarea'}\n      multiline\n      data-no-overflow={(autosize && maxRows === undefined) || undefined}\n      {...autosizeProps}\n    />\n  );\n});\n\nTextarea.classes = InputBase.classes;\nTextarea.displayName = '@mantine/core/Textarea';\n"],"mappings":";;;;;;;;;;;;;;;AAKA,MAAMA,YAAY,GAAG,EAAE;AACX,MAACC,QAAQ,GAAGC,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAC9C,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,OAAO;IAAEC,gBAAgB;IAAE,GAAGC;EAAM,CAAE,GAAGC,QAAQ,CAC1E,UAAU,EACVV,YAAY,EACZG,KACJ,CAAG;EACD,MAAMQ,aAAa,GAAGN,QAAQ,GAAG;IAAEC,OAAO;IAAEC;EAAO,CAAE,GAAG,EAAE;EAC1D,sBAAuBK,KAAK,CAACC,aAAa,CACxCC,SAAS,EACT;IACEC,SAAS,EAAEV,QAAQ,GAAGW,gBAAgB,GAAG,UAAU;IACnDZ,GAAG;IACH,GAAGK,MAAM;IACTD,gBAAgB,EAAEA,gBAAgB,IAAI,UAAU;IAChDS,SAAS,EAAE,IAAI;IACf,kBAAkB,EAAEZ,QAAQ,IAAIC,OAAO,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC;IAC5D,GAAGK;EACJ,CACL,CAAG;AACH,CAAC,CAAE;AACHV,QAAQ,CAACiB,OAAO,GAAGJ,SAAS,CAACI,OAAO;AACpCjB,QAAQ,CAACkB,WAAW,GAAG,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}