{"ast":null,"code":"'use client';\n\nimport 'react';\nimport { createOptionalContext } from '../../core/utils/create-optional-context/create-optional-context.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst [RadioGroupProvider, useRadioGroupContext] = createOptionalContext();\nexport { RadioGroupProvider, useRadioGroupContext };","map":{"version":3,"names":["RadioGroupProvider","useRadioGroupContext","createOptionalContext"],"sources":["/Users/nguyenphuhao/Downloads/Nhom24/Mantine_group24-main/node_modules/@mantine/core/src/components/Radio/RadioGroup.context.ts"],"sourcesContent":["import { MantineSize, createOptionalContext } from '../../core';\n\ninterface RadioGroupContextValue {\n  size: MantineSize | undefined;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n}\n\nexport const [RadioGroupProvider, useRadioGroupContext] =\n  createOptionalContext<RadioGroupContextValue>();\n"],"mappings":";;;;;;;;;;;;AAEY,MAAC,CAACA,kBAAkB,EAAEC,oBAAoB,CAAC,GAAGC,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}